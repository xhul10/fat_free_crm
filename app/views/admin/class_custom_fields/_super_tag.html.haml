%li[super_tag]{ highlightable(dom_id(super_tag, :tools)) }
  .tools{ invisible, :id => dom_id(super_tag, :tools) }
    %small
      = link_to_edit(super_tag, :url => edit_admin_super_tag_path(super_tag)) + " | "
      = link_to_delete(super_tag, :url => admin_super_tag_path(super_tag))
  %tt
    %b
      = link_to(h(super_tag.name), admin_super_tag_path(super_tag))
    |
  - if super_tag.taggable_type.present?
    %tt
      Only Applies To:
      %b
        = super_tag.taggable_type
      |
  - if super_tag.customfields.any?
    %tt
      Fields:
      %b
        = super_tag.customfields.map{|c|[c.field_label,c.form_field_type]}.map{|f, t| "#{f} (#{t.gsub('_',' ')})"}.join(', ')
        -# Produces: "Description (long answer), Registration (long answer)"
      |
  == added #{time_ago_in_words(super_tag.created_at)} ago

  = hook(:super_super_tag_bottom, self, :super_tag => super_tag)

