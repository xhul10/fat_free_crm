= styles_for :task

#confirm{ hidden }
.title_tools#menu
  - unless %w(converted rejected).include?(@lead.status)
    = link_to_inline(:convert_lead, convert_lead_path(@lead), :text => "Convert") + " | "
  = link_to_inline(:edit_lead, edit_lead_path(@lead), :text => "Edit") + " | "
  - if @lead.status != "rejected"
    = link_to_function("Reject?", confirm_reject(@lead)) + " | "
  = link_to_function("Delete?", confirm_delete(@lead))
.title#title= @lead.full_name

%div#convert_lead{ hidden }
%div#edit_lead{ hidden }

= render :partial => "common/new_comment", :locals => { :commentable => @lead }
= render :partial => "common/comment", :collection => @lead.comments

-#-----------------------------------------------------------------------------
%br
= inline :create_task, new_task_path, { :class => "subtitle_tools", :related => dom_id(@lead) }
.subtitle#create_task_title Tasks
.remote#create_task{ hidden }
.log#tasks
  - @lead.tasks.each do |task|
    - if task.completed_at?
      = render :partial => "tasks/completed", :locals => { :completed => task, :bucket => nil }
    - elsif task.my?(@current_user)
      = render :partial => "tasks/pending", :locals => { :pending => task, :bucket => nil }
    - elsif task.assigned_by?(@current_user)
      = render :partial => "tasks/assigned", :locals => { :assigned => task, :bucket => nil }
    - else
      = render :partial => "tasks/related", :locals => { :related => task, :bucket => nil }
      / == #{task.id}: created by #{task.user.name}, assigned to #{task.assignee ? task.assignee.name : "none"}

