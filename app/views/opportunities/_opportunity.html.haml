%li[opportunity]{ highlightable(dom_id(opportunity, :tools)) }
  - if opportunity.stage
    .strip{:class => opportunity.stage}= t(opportunity.stage)
  - else
    .strip{:style => "color:white;"} #{t:other}
  %div
    .tools{ invisible, :id => dom_id(opportunity, :tools) }
      %small
        = link_to_edit(opportunity) + " | "
        = link_to_delete(opportunity) + "&nbsp;"
    = link_to(opportunity.name, opportunity)
    - if opportunity.account
      == #{t:from} #{link_to(opportunity.account.name, account_path(opportunity.account))}
    %tt
      &ndash;
      = t(:added_by, :time_ago => time_ago_in_words(opportunity.created_at), :user => (opportunity.user.id == @current_user.id ? t(:me) : opportunity.user.full_name))
    - unless @current_user.preference[:opportunities_outline] == "brief"
      %dt
        %b= number_to_currency(opportunity.weighted_amount, :precision => 0) + " | "
        - won_or_lost = %w(won lost).include?(opportunity.stage)
        - unless won_or_lost
          == #{number_to_currency(opportunity.amount || 0, :precision => 0)}
          == #{opportunity.discount ? t(:opportunity_discount_text, number_to_currency(opportunity.discount, :precision => 0)) : t(:opportunity_no_discount_text)}
          = t(:opportunity_probability_text, (opportunity.probability || 0).to_s + '%') + " | " 
        - if opportunity.closes_on
          - if won_or_lost
            - if opportunity.closes_on >= Date.today
              = t(:opportunity_closing_date_text, opportunity.closes_on.to_s(:mmddyy))
            - else
              = t(:opportunity_closed_text, :time_ago => distance_of_time_in_words(opportunity.closes_on, Date.today), :date => opportunity.closes_on.to_s(:mmddyy))
          - elsif opportunity.closes_on > Date.today
            = t(:opportunity_expected_to_close_text,  :time => distance_of_time_in_words(Date.today, opportunity.closes_on), :date => opportunity.closes_on.to_s(:mmddyy))
          - elsif opportunity.closes_on == Date.today
            %span.warn= t(:opportunity_close_today_text)
          - else
            %span.warn= t(:opportunity_past_due_text, distance_of_time_in_words(opportunity.closes_on, Date.today))
        - else
          = t(:opportunity_no_closing_date)
      = hook(:opportunity_bottom, self, :opportunity => opportunity)
